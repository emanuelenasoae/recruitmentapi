// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecruitmentApp.Entities;

#nullable disable

namespace RecruitmentApp.Migrations
{
    [DbContext(typeof(RecruitmentContext))]
    [Migration("20250125141959_AddMembers")]
    partial class AddMembers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("RecruitmentApp.Entities.Candidate", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("INTEGER");

                    b.HasKey("CandidateId")
                        .HasName("PrimaryKey");

                    b.HasIndex("RoleId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("RecruitmentApp.Entities.OpenRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleDescrption")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleTitle")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SalaryRange")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Seniority")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("RoleId");

                    b.ToTable("OpenRoles");
                });

            modelBuilder.Entity("RecruitmentApp.Entities.Recruiter", b =>
                {
                    b.Property<int>("RecruiterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Seniority")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Skills")
                        .HasColumnType("TEXT");

                    b.HasKey("RecruiterId");

                    b.ToTable("Recruiters");
                });

            modelBuilder.Entity("RecruitmentApp.Entities.RecruitmentProcess", b =>
                {
                    b.Property<int>("ProcessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CandidateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Details")
                        .HasColumnType("TEXT");

                    b.Property<int>("RecruiterId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ScheduleDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stage")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ProcessId");

                    b.HasIndex("CandidateId");

                    b.HasIndex("RecruiterId");

                    b.ToTable("RecruitmentProcesses");
                });

            modelBuilder.Entity("RecruitmentAppAPI.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("RecruitmentApp.Entities.Candidate", b =>
                {
                    b.HasOne("RecruitmentApp.Entities.OpenRole", "OpenRole")
                        .WithMany("Candidates")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OpenRole");
                });

            modelBuilder.Entity("RecruitmentApp.Entities.RecruitmentProcess", b =>
                {
                    b.HasOne("RecruitmentApp.Entities.Candidate", "Candidate")
                        .WithMany("RecruitmentProcesses")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecruitmentApp.Entities.Recruiter", "Recruiter")
                        .WithMany("RecruitmentProcesses")
                        .HasForeignKey("RecruiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Recruiter");
                });

            modelBuilder.Entity("RecruitmentApp.Entities.Candidate", b =>
                {
                    b.Navigation("RecruitmentProcesses");
                });

            modelBuilder.Entity("RecruitmentApp.Entities.OpenRole", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("RecruitmentApp.Entities.Recruiter", b =>
                {
                    b.Navigation("RecruitmentProcesses");
                });
#pragma warning restore 612, 618
        }
    }
}
